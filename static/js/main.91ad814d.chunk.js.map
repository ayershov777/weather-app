{"version":3,"sources":["services/weatherService.js","components/CityField.jsx","components/CurrentWeather.jsx","components/FiveDayForecast.jsx","hooks/useWindowSize.js","components/WeatherPage.jsx","App.jsx","index.jsx"],"names":["todayBaseUrl","fiveDayBaseUrl","API_KEY","getWeatherWithQuery","query","a","getCurrentForecastWithQuery","todayData","cod","message","getFiveDayForecastWithQuery","fiveDayData","todayWeather","reduceTodayData","dailyWeather","reduceFiveDayData","getWeather","getCurrentForecast","getFiveDayForecast","alert","console","log","getGeoUrl","url","fetch","res","json","getQueryUrl","data","dateKeys","isFirstDateAfterNoon","Date","list","dt_txt","getHours","reduce","dates","item","idx","dtText","time","split","parseInt","isNoon","slice","getDateKeys","tempHighLow","dateMap","map","key","dateText","toDateString","forEach","temp","high","Math","max","main","temp_max","low","min","temp_min","getTempHighLow","filter","includes","date","getDateDisplay","round","status","weather","description","statusIcon","getStatusIcon","icon","location","name","temperature","feelsLike","feels_like","base","getCurrentLocation","lat","lon","params","URLSearchParams","units","appid","toString","q","navigator","geolocation","Promise","resolve","reject","getCurrentPosition","position","coords","latitude","longitude","substr","length","fileName","getData","CityField","setWeather","useState","value","setValue","undefined","feedback","setFeedback","e","preventDefault","weatherService","className","Form","onSubmit","Group","Label","Control","type","onChange","target","required","isInvalid","Feedback","Button","CurrentWeather","Row","src","FiveDayForecast","size","width","height","windowSize","setWindowSize","useEffect","handleResize","window","innerWidth","innerHeight","addEventListener","removeEventListener","useWindowSize","Col","md","lg","WeatherCard","Card","Img","variant","Body","Title","Text","WeatherPage","Container","App","then","ReactDOM","render","document","getElementById"],"mappings":"uOAAMA,EAAe,0CACfC,EAAiB,2CAGjBC,EAAU,mC,SAEDC,E,8EAAf,WAAmCC,GAAnC,iBAAAC,EAAA,sEAC0BC,EAA4BF,GADtD,UAGuB,OAFfG,EADR,QAGeC,IAHf,yCAIW,CACLC,QAASF,EAAUE,UALzB,uBAS4BC,EAA4BN,GATxD,cASQO,EATR,yBAWS,CACLC,aAAcC,EAAgBN,GAC9BO,aAAcC,EAAkBJ,KAbpC,4C,+BAiBeK,I,2EAAf,8BAAAX,EAAA,sEAC0BY,IAD1B,cACQV,EADR,gBAE4BW,IAF5B,cAEQP,EAFR,yBAGS,CACLC,aAAcC,EAAgBN,GAC9BO,aAAcC,EAAkBJ,KALpC,4C,kEASA,WAAuBP,GAAvB,SAAAC,EAAA,mEAEOD,EAFP,gCAGmBD,EAAoBC,GAHvC,+DAMiBY,IANjB,0EASIG,MAAM,iDAENC,QAAQC,IAAR,MAXJ,2D,+BAeeJ,I,2EAAf,8BAAAZ,EAAA,sEACoBiB,EAAUtB,GAD9B,cACQuB,EADR,gBAEoBC,MAAMD,GAF1B,cAEQE,EAFR,gBAGeA,EAAIC,OAHnB,oF,+BAMepB,E,8EAAf,WAA2CF,GAA3C,iBAAAC,EAAA,6DACQkB,EAAMI,EAAY3B,EAAcI,GADxC,SAEoBoB,MAAMD,GAF1B,cAEQE,EAFR,gBAGeA,EAAIC,OAHnB,oF,+BAMeR,I,2EAAf,8BAAAb,EAAA,sEACoBiB,EAAUrB,GAD9B,cACQsB,EADR,gBAEoBC,MAAMD,GAF1B,cAEQE,EAFR,gBAGeA,EAAIC,OAHnB,oF,+BAMehB,E,8EAAf,WAA2CN,GAA3C,iBAAAC,EAAA,6DACQkB,EAAMI,EAAY1B,EAAgBG,GAD1C,SAEoBoB,MAAMD,GAF1B,cAEQE,EAFR,gBAGeA,EAAIC,OAHnB,oF,sBAMA,SAASX,EAAkBa,GACzB,IAAMC,EAoER,SAAqBD,GACnB,IACME,EADY,IAAIC,KAAKH,EAAKI,KAAK,GAAGC,QACDC,YAAc,GAErD,OAAON,EAAKI,KAAKG,QAAO,SAACC,EAAOC,EAAMC,GACpC,QAAO,GACL,KAAa,IAARA,GAAaR,EAChB,MAAO,CAACO,EAAKJ,QACf,KAdN,SAAgBM,GACd,IAAMC,EAAOD,EAAOE,MAAM,KAAK,GAE/B,OAAgB,KADHC,SAASF,EAAKC,MAAM,KAAK,IAY7BE,CAAON,EAAKJ,QACf,MAAM,GAAN,mBAAWG,GAAX,CAAkBC,EAAKJ,SACzB,QACE,OAAOG,KAEV,IAAIQ,MAAM,EAAG,GAjFCC,CAAYjB,GACvBkB,EAoGR,SAAwBjB,EAAUD,GAEhC,IAAMmB,EAAUlB,EAASM,QAAO,SAACa,EAAKC,GACpC,IAAMC,EAAW,IAAInB,KAAKkB,GAAKE,eAC/B,OAAO,2BAAKH,GAAZ,kBAAkBE,EAAWD,MAC5B,IAEGH,EAAc,GAepB,OAdAlB,EAAKI,KAAKoB,SAAQ,SAACf,GACjB,IAAMa,EAAW,IAAInB,KAAKM,EAAKJ,QAAQkB,eACjCF,EAAMF,EAAQG,GAEpB,GAAGJ,EAAYG,GAAM,CACnB,IAAMI,EAAOP,EAAYG,GACzBI,EAAKC,KAAOC,KAAKC,IAAIH,EAAKC,KAAMjB,EAAKoB,KAAKC,UAC1CL,EAAKM,IAAMJ,KAAKK,IAAIP,EAAKM,IAAKtB,EAAKoB,KAAKI,eAGxCf,EAAYG,GAAO,CAAEK,KAAMjB,EAAKoB,KAAKC,SAAUC,IAAKtB,EAAKoB,KAAKI,aAI3Df,EA1HagB,CAAejC,EAAUD,GAE7C,OAAOA,EAAKI,KACT+B,QAAO,SAAC1B,GAAD,OAAUR,EAASmC,SAAS3B,EAAKJ,WACxCe,KAAI,SAACX,EAAMC,GAAP,MAAgB,CACnB2B,KAAMC,EAAe7B,EAAKJ,QAC1BqB,KAAMC,KAAKY,MAAMrB,EAAYT,EAAKJ,QAAQqB,MAC1CK,IAAKJ,KAAKY,MAAMrB,EAAYT,EAAKJ,QAAQ0B,KACzCS,OAAQ/B,EAAKgC,QAAQ,GAAGC,YACxBC,WAAYC,EAAcnC,EAAKgC,QAAQ,GAAGI,KAAMnC,OAItD,SAASzB,EAAgBe,GACvB,MAAO,CACL8C,SAAU9C,EAAK+C,KACfC,YAAarB,KAAKY,MAAMvC,EAAK6B,KAAKJ,MAClCwB,UAAWtB,KAAKY,MAAMvC,EAAK6B,KAAKqB,YAChCV,OAAQxC,EAAKyC,QAAQ,GAAGC,YACxBC,WAAYC,EAAc5C,EAAKyC,QAAQ,GAAGI,O,SAI/BnD,E,8EAAf,WAAyByD,GAAzB,qBAAA1E,EAAA,sEAC2B2E,IAD3B,uBACSC,EADT,EACSA,IAAKC,EADd,EACcA,IACNC,EAAS,IAAIC,gBAAgB,CACjCH,MACAC,MACAG,MAAO,WACPC,MAAOpF,IACNqF,WAPL,oCASoBR,EATpB,YAS4BI,IAT5B,4C,sBAYA,SAASxD,EAAYoD,EAAM3E,GACzB,IAAM+E,EAAS,IAAIC,gBAAgB,CACjCI,EAAGpF,EACHiF,MAAO,WACPC,MAAOpF,IACNqF,WAEH,MAAM,WAAN,OAAkBR,EAAlB,YAA0BI,GAG5B,SAASH,IACP,GAAGS,UAAUC,YACX,OAAO,IAAIC,SAAS,SAACC,EAASC,GAC5BJ,UAAUC,YAAYI,oBAAmB,SAACC,GACxCH,EAAQ,CAAEX,IAAKc,EAASC,OAAOC,SAAUf,IAAKa,EAASC,OAAOE,kBAKlE/E,MAAM,6CA6BV,SAAS+C,EAAe3B,GACtB,IAAM0B,EAAO,IAAIlC,KAAKQ,GAAQY,eAC9B,OAAOc,EAAKkC,OAAO,EAAGlC,EAAKmC,OAAO,GAGpC,SAAS5B,EAAcC,EAAMnC,GAChB,IAARA,IACDmC,EAAI,UAAMA,EAAK0B,OAAO,EAAG,GAArB,MAGN,IAAME,EAAQ,UAAM5B,EAAN,WACd,MAAM,UAAN,OArKiB,4BAqKjB,YAA+B4B,GA+BlB,OACbC,Q,oDCjMa,SAASC,EAAT,GAAoC,IAAfC,EAAc,EAAdA,WAAc,EACtBC,mBAAS,IADa,mBACzCC,EADyC,KAClCC,EADkC,OAEhBF,wBAASG,GAFO,mBAEzCC,EAFyC,KAE/BC,EAF+B,iDAShD,WAA4BC,GAA5B,eAAA1G,EAAA,6DACE0G,EAAEC,iBADJ,SAGqBC,EAAeX,QAAQI,GAH5C,QAGQ9E,EAHR,QAKUnB,QACNqG,EAAYlF,EAAKnB,UAGjB+F,EAAW5E,GACX+E,EAAS,KAVb,4CATgD,sBAuBhD,OACE,sBAAKO,UAAU,OAAf,UACE,oBAAIA,UAAU,wBAAd,qDACA,cAACC,EAAA,EAAD,CAAMD,UAAU,OAAOE,SA1BqB,4CA0B5C,SACE,eAACD,EAAA,EAAKE,MAAN,WACE,cAACF,EAAA,EAAKG,MAAN,CAAYJ,UAAU,kCAAtB,0BACA,cAACC,EAAA,EAAKI,QAAN,CAAcC,KAAK,OAAOd,MAAOA,EAAOe,SAzBhD,SAA0BV,GACxBJ,EAASI,EAAEW,OAAOhB,OAClBI,OAAYF,IAuB8De,UAAQ,EAACC,UAAWf,IACxF,cAACM,EAAA,EAAKI,QAAQM,SAAd,CAAuBL,KAAK,UAA5B,SACGX,IAEH,qBAAKK,UAAU,qCAAf,SACE,cAACY,EAAA,EAAD,CAAQZ,UAAU,iBAAiBM,KAAK,SAAxC,8B,YCtCG,SAASO,EAAT,GAA2C,IAAjBnH,EAAgB,EAAhBA,aACvC,OACE,gCACE,cAACoH,EAAA,EAAD,CAAKd,UAAU,8BAAf,SACE,oBAAIA,UAAU,YAAd,SACGtG,EAAa8D,aAGlB,eAACsD,EAAA,EAAD,CAAKd,UAAU,sCAAf,UACE,8BAAK,qBAAKe,IAAKrH,EAAa2D,eAC5B,qBAAI2C,UAAU,YAAd,4BAA0CtG,EAAagE,YAAvD,mBACA,qBAAIsC,UAAU,YAAd,wBAAsCtG,EAAaiE,UAAnD,UACA,oBAAIqC,UAAU,cAAd,SAA6BtG,EAAawD,e,oBCPnC,SAAS8D,EAAT,GAA4C,IAAjBpH,EAAgB,EAAhBA,aAClCqH,ECNO,WAA0B,IAAD,EACF1B,mBAAS,CAC3C2B,WAAOxB,EACPyB,YAAQzB,IAH4B,mBAC/B0B,EAD+B,KACnBC,EADmB,KAmBtC,OAbAC,qBAAU,WACR,SAASC,IACPF,EAAc,CACZH,MAAOM,OAAOC,WACdN,OAAQK,OAAOE,cAOnB,OAHAF,OAAOG,iBAAiB,SAAUJ,GAClCA,IAEO,kBAAMC,OAAOI,oBAAoB,SAAUL,MACjD,IACIH,EDbMS,GAEb,OACE,gCACE,oBAAI7B,UAAU,wBAAd,+BAEEiB,EAAKC,OAAS,IAEd,cAACJ,EAAA,EAAD,CAAKd,UAAU,8BAAf,SACGpG,EAAakC,KAAI,SAACqB,EAAS/B,GAAV,OAChB,eAAC,WAAD,WACE,cAAC0G,EAAA,EAAD,CAAKC,GAAI,GAAIC,GAAI,EAAjB,SACE,cAACC,EAAD,CAAa9E,QAASA,MAEtB/B,EAAM,GAAO,qBAAK4E,UAAU,+BAJhC,cAAsB5E,SAU1B,sBAAK4E,UAAU,OAAf,UACE,oBAAIA,UAAU,6BACbpG,EAAakC,KAAI,SAACqB,EAAS/B,GAAV,OAChB,eAAC,WAAD,WACE,cAAC6G,EAAD,CAAa9E,QAASA,IACpB/B,EAAM,GAAO,oBAAI4E,UAAU,+BAF/B,cAAsB5E,aAWlC,SAAS6G,EAAT,GAAmC,IAAZ9E,EAAW,EAAXA,QACrB,OACE,eAAC+E,EAAA,EAAD,CAAMlC,UAAU,eAAhB,UACE,cAACkC,EAAA,EAAKC,IAAN,CAAUC,QAAQ,MAAMrB,IAAK5D,EAAQE,aACrC,eAAC6E,EAAA,EAAKG,KAAN,WACE,cAACH,EAAA,EAAKI,MAAN,CAAYtC,UAAU,YAAtB,SACG7C,EAAQJ,OAEX,eAACmF,EAAA,EAAKK,KAAN,CAAWvC,UAAU,YAArB,UACG7C,EAAQf,KADX,QACmBe,EAAQV,IAD3B,UAGA,cAACyF,EAAA,EAAKK,KAAN,CAAWvC,UAAU,cAArB,SACG7C,EAAQD,eEhDJ,SAASsF,EAAT,GAA8E,IAAD,IAAtDrF,QAAWzD,EAA2C,EAA3CA,aAAcE,EAA6B,EAA7BA,aAAgB0F,EAAa,EAAbA,WAC7E,OACE,eAACmD,EAAA,EAAD,WACE,cAAC5B,EAAD,CAAgBnH,aAAcA,IAC9B,cAACsH,EAAD,CAAiBpH,aAAcA,IAC/B,cAACyF,EAAD,CAAWC,WAAYA,O,MCYdoD,MAjBf,WAAgB,IAAD,EACiBnD,wBAASG,GAD1B,mBACNvC,EADM,KACGmC,EADH,KAQb,OALAgC,qBAAU,WACRvB,EAAeX,UACZuD,MAAK,SAACjI,GAAD,OAAU4E,EAAW5E,QAC5B,IAECyC,EAKF,cAACqF,EAAD,CAAarF,QAASA,EAASmC,WAAYA,IAJpC,2DCXXsD,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.91ad814d.chunk.js","sourcesContent":["const todayBaseUrl = \"api.openweathermap.org/data/2.5/weather\";\r\nconst fiveDayBaseUrl = \"api.openweathermap.org/data/2.5/forecast\";\r\nconst imgBaseUrl = \"openweathermap.org/img/wn\";\r\n\r\nconst API_KEY = \"bef59072dc4f5e16c08bbc9b055f4516\"; // I'm leaving the API key exposed on the client for simplicity - this is a security breach.\r\n\r\nasync function getWeatherWithQuery(query) {\r\n  const todayData = await getCurrentForecastWithQuery(query);\r\n  \r\n  if(todayData.cod !== 200) {\r\n    return {\r\n      message: todayData.message\r\n    }\r\n  }\r\n  \r\n  const fiveDayData = await getFiveDayForecastWithQuery(query);\r\n\r\n  return {\r\n    todayWeather: reduceTodayData(todayData),\r\n    dailyWeather: reduceFiveDayData(fiveDayData),\r\n  };\r\n}\r\n\r\nasync function getWeather() {\r\n  const todayData = await getCurrentForecast();\r\n  const fiveDayData = await getFiveDayForecast();\r\n  return {\r\n    todayWeather: reduceTodayData(todayData),\r\n    dailyWeather: reduceFiveDayData(fiveDayData),\r\n  };\r\n}\r\n\r\nasync function getData(query) {\r\n  try {\r\n    if(query) {\r\n      return await getWeatherWithQuery(query)\r\n    }\r\n \r\n    return await getWeather()\r\n  }\r\n  catch(err) {\r\n    alert(\"Weather App was unable to obtain weather data\");\r\n    // fallback would have to be an error page\r\n    console.log(err);\r\n  }\r\n}\r\n\r\nasync function getCurrentForecast() {\r\n  const url = await getGeoUrl(todayBaseUrl);\r\n  const res = await fetch(url);\r\n  return await res.json();\r\n}\r\n\r\nasync function getCurrentForecastWithQuery(query) {\r\n  const url = getQueryUrl(todayBaseUrl, query);\r\n  const res = await fetch(url);\r\n  return await res.json();\r\n}\r\n\r\nasync function getFiveDayForecast() {\r\n  const url = await getGeoUrl(fiveDayBaseUrl);\r\n  const res = await fetch(url);\r\n  return await res.json();\r\n}\r\n\r\nasync function getFiveDayForecastWithQuery(query) {\r\n  const url = getQueryUrl(fiveDayBaseUrl, query);\r\n  const res = await fetch(url);\r\n  return await res.json();\r\n}\r\n\r\nfunction reduceFiveDayData(data) {\r\n  const dateKeys = getDateKeys(data);\r\n  const tempHighLow = getTempHighLow(dateKeys, data);\r\n\r\n  return data.list\r\n    .filter((item) => dateKeys.includes(item.dt_txt))\r\n    .map((item, idx) => ({\r\n      date: getDateDisplay(item.dt_txt),\r\n      high: Math.round(tempHighLow[item.dt_txt].high),\r\n      low: Math.round(tempHighLow[item.dt_txt].low),\r\n      status: item.weather[0].description,\r\n      statusIcon: getStatusIcon(item.weather[0].icon, idx),\r\n    }));\r\n}\r\n\r\nfunction reduceTodayData(data) {\r\n  return {\r\n    location: data.name,\r\n    temperature: Math.round(data.main.temp),\r\n    feelsLike: Math.round(data.main.feels_like),\r\n    status: data.weather[0].description,\r\n    statusIcon: getStatusIcon(data.weather[0].icon),\r\n  };\r\n}\r\n\r\nasync function getGeoUrl(base) {\r\n  const {lat, lon} = await getCurrentLocation();\r\n  const params = new URLSearchParams({\r\n    lat,\r\n    lon,\r\n    units: \"imperial\",\r\n    appid: API_KEY,\r\n  }).toString();\r\n\r\n  return `https://${base}?${params}`;\r\n}\r\n\r\nfunction getQueryUrl(base, query) {\r\n  const params = new URLSearchParams({\r\n    q: query,\r\n    units: \"imperial\",\r\n    appid: API_KEY,\r\n  }).toString();\r\n\r\n  return `https://${base}?${params}`;\r\n}\r\n\r\nfunction getCurrentLocation() {\r\n  if(navigator.geolocation) {\r\n    return new Promise(((resolve, reject) => {\r\n      navigator.geolocation.getCurrentPosition((position) => {\r\n        resolve({ lat: position.coords.latitude, lon: position.coords.longitude });\r\n      });\r\n    }));\r\n  }\r\n  else {\r\n    alert(\"Your browser does not support geolocation\");\r\n    // do not make the call\r\n    // do not render weather data\r\n    // only render the CityField, to allow the user to manually enter location\r\n  }\r\n}\r\n\r\nfunction isNoon(dtText) {\r\n  const time = dtText.split(\" \")[1];\r\n  const hour = parseInt(time.split(\":\")[0]);\r\n  return hour === 12;\r\n}\r\n\r\nfunction getDateKeys(data) {\r\n  const firstDate = new Date(data.list[0].dt_txt);\r\n  const isFirstDateAfterNoon = firstDate.getHours() >= 12;\r\n\r\n  return data.list.reduce((dates, item, idx) => {\r\n    switch(true) {\r\n      case idx === 0 && isFirstDateAfterNoon:\r\n        return [item.dt_txt];\r\n      case isNoon(item.dt_txt):\r\n        return [...dates, item.dt_txt];\r\n      default:\r\n        return dates;\r\n    }\r\n  }, []).slice(0, 5);\r\n}\r\n\r\nfunction getDateDisplay(dtText) {\r\n  const date = new Date(dtText).toDateString();\r\n  return date.substr(0, date.length-5);\r\n}\r\n\r\nfunction getStatusIcon(icon, idx) {\r\n  if(idx !== 0) {\r\n    icon = `${icon.substr(0, 2)}d`;\r\n  }\r\n  \r\n  const fileName = `${icon}@2x.png`;\r\n  return `http://${imgBaseUrl}/${fileName}`;\r\n}\r\n\r\n// This function calculates the high and low temps for each day by iterating over the 3 hour intervals\r\n// Each day's high and low temp is indexed by the dateKey\r\n// Given more time, I would write this function more declaratively\r\nfunction getTempHighLow(dateKeys, data) {\r\n  // dateMap is used to obtain a dateKey given an arbitrary date-time string, only used below\r\n  const dateMap = dateKeys.reduce((map, key) => {\r\n    const dateText = new Date(key).toDateString();\r\n    return { ...map, [dateText]: key }\r\n  }, {});\r\n\r\n  const tempHighLow = {};\r\n  data.list.forEach((item) => {\r\n    const dateText = new Date(item.dt_txt).toDateString();\r\n    const key = dateMap[dateText];\r\n    \r\n    if(tempHighLow[key]) {\r\n      const temp = tempHighLow[key];\r\n      temp.high = Math.max(temp.high, item.main.temp_max);\r\n      temp.low = Math.min(temp.low, item.main.temp_min);\r\n    }\r\n    else {\r\n      tempHighLow[key] = { high: item.main.temp_max, low: item.main.temp_min };\r\n    }\r\n  });\r\n\r\n  return tempHighLow;\r\n}\r\n\r\nexport default {\r\n  getData,\r\n}","import { useState } from \"react\";\r\nimport Form from \"react-bootstrap/esm/Form\";\r\nimport Button from \"react-bootstrap/esm/Button\";\r\n\r\nimport weatherService from \"../services/weatherService\";\r\n\r\nexport default function CityField({ setWeather }) {\r\n  const [value, setValue] = useState(\"\");\r\n  const [feedback, setFeedback] = useState(undefined);\r\n\r\n  function handleChangeCity(e) {\r\n    setValue(e.target.value);\r\n    setFeedback(undefined);\r\n  }\r\n\r\n  async function handleSubmit(e) {\r\n    e.preventDefault();\r\n\r\n    const data = await weatherService.getData(value);\r\n    \r\n    if(data.message) {\r\n      setFeedback(data.message);\r\n    }\r\n    else {\r\n      setWeather(data);\r\n      setValue(\"\");\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"pb-5\">\r\n      <h3 className=\"text-center c-primary\">Where do you want to check the weather?</h3>\r\n      <Form className=\"pt-4\" onSubmit={handleSubmit}>\r\n        <Form.Group>\r\n          <Form.Label className=\"d-block text-center c-secondary\">Enter a city</Form.Label>\r\n          <Form.Control type=\"text\" value={value} onChange={handleChangeCity} required isInvalid={feedback} />\r\n          <Form.Control.Feedback type=\"invalid\">\r\n            {feedback}\r\n          </Form.Control.Feedback>\r\n          <div className=\"d-flex justify-content-center pt-4\">\r\n            <Button className=\"primary-button\" type=\"submit\">\r\n              Search\r\n            </Button>\r\n          </div>\r\n        </Form.Group>\r\n      </Form>\r\n    </div>\r\n  );\r\n}\r\n","import Row from \"react-bootstrap/esm/Row\";\r\n\r\nexport default function CurrentWeather({ todayWeather }) {\r\n  return (\r\n    <div>\r\n      <Row className=\"justify-content-center pt-5\">\r\n        <h2 className=\"c-primary\">\r\n          {todayWeather.location}\r\n        </h2>\r\n      </Row>\r\n      <Row className=\"flex-column align-items-center pb-5\">\r\n        <div><img src={todayWeather.statusIcon} /></div>\r\n        <h6 className=\"c-primary\">It's currently {todayWeather.temperature}°F outside</h6>\r\n        <h6 className=\"c-primary\">Feels like {todayWeather.feelsLike}°</h6>\r\n        <h6 className=\"c-secondary\">{todayWeather.status}</h6>\r\n      </Row>\r\n    </div>\r\n  );\r\n}\r\n","import { Fragment } from \"react\";\r\nimport Card from \"react-bootstrap/esm/Card\";\r\nimport Col from \"react-bootstrap/esm/Col\";\r\nimport Row from \"react-bootstrap/esm/Row\";\r\n\r\nimport useWindowSize from \"../hooks/useWindowSize\";\r\n\r\nexport default function FiveDayForecast({ dailyWeather }) {\r\n  const size = useWindowSize();\r\n\r\n  return (\r\n    <div>\r\n      <h3 className=\"text-center c-primary\">Five-day Forecast</h3>\r\n\r\n      {(size.width >= 992)\r\n      ? (\r\n        <Row className=\"justify-content-around py-5\">\r\n          {dailyWeather.map((weather, idx) => (\r\n            <Fragment key={`day-${idx}`}>\r\n              <Col md={12} lg={2}>\r\n                <WeatherCard weather={weather} />\r\n              </Col>\r\n              {(idx < 4)  && <div className=\"weather-card-v-separator\" />}\r\n            </Fragment>\r\n          ))}\r\n        </Row>\r\n      )\r\n      : (\r\n        <div className=\"py-5\">\r\n          <hr className=\"weather-card-h-separator\"/>\r\n          {dailyWeather.map((weather, idx) => (\r\n            <Fragment key={`day-${idx}`}>\r\n              <WeatherCard weather={weather} />\r\n              {(idx < 4)  && <hr className=\"weather-card-h-separator\"/>}\r\n            </Fragment>\r\n          ))}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction WeatherCard({ weather }) {\r\n  return (\r\n    <Card className=\"weather-card\">\r\n      <Card.Img variant=\"top\" src={weather.statusIcon} />\r\n      <Card.Body>\r\n        <Card.Title className=\"c-primary\">\r\n          {weather.date}\r\n        </Card.Title>\r\n        <Card.Text className=\"c-primary\">\r\n          {weather.high}°/{weather.low}°\r\n        </Card.Text>\r\n        <Card.Text className=\"c-secondary\">\r\n          {weather.status}\r\n        </Card.Text>\r\n      </Card.Body>\r\n    </Card>\r\n  );\r\n}","import { useState, useEffect } from \"react\";\r\n\r\nexport default function useWindowSize() {\r\n  const [windowSize, setWindowSize] = useState({\r\n    width: undefined,\r\n    height: undefined,\r\n  });\r\n\r\n  useEffect(() => {\r\n    function handleResize() {\r\n      setWindowSize({\r\n        width: window.innerWidth,\r\n        height: window.innerHeight,\r\n      });\r\n    }\r\n    \r\n    window.addEventListener(\"resize\", handleResize);\r\n    handleResize();\r\n    \r\n    return () => window.removeEventListener(\"resize\", handleResize);\r\n  }, []);\r\n  return windowSize;\r\n}","import Container from \"react-bootstrap/Container\";\r\nimport CityField from \"./CityField\";\r\n\r\nimport CurrentWeather from \"./CurrentWeather\";\r\nimport FiveDayForecast from \"./FiveDayForecast\";\r\n\r\nexport default function WeatherPage({ weather: { todayWeather, dailyWeather }, setWeather}) {\r\n  return (\r\n    <Container>\r\n      <CurrentWeather todayWeather={todayWeather} />\r\n      <FiveDayForecast dailyWeather={dailyWeather} />\r\n      <CityField setWeather={setWeather} />\r\n    </Container>\r\n  );\r\n}\r\n\r\n","import { useEffect, useState } from \"react\";\nimport WeatherPage from \"./components/WeatherPage\";\nimport weatherService from \"./services/weatherService\";\n\nimport \"./App.css\";\n\nfunction App() {\n  const [weather, setWeather] = useState(undefined);\n\n  useEffect(() => {\n    weatherService.getData()\n      .then((data) => setWeather(data));\n  }, []);\n\n  if(!weather) {\n    return <div>Loading weather data...</div>\n  }\n  \n  return (\n    <WeatherPage weather={weather} setWeather={setWeather} />\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}